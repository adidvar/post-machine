name: Build and Release

on:
  release:
    types: [created]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install dependencies
        run: sudo apt install qt6-base-dev qt6-tools-dev
      - name: Build Project
        uses: threeal/cmake-action@v2.1.0
        with:
          source-dir: .
          build-dir: build
          options: |
            CMAKE_BUILD_TYPE=Release
          build-args: --config Release
      - name: Package with CPack
        run: |
          cd build
          cpack
      - name: Upload Release Artifacts
        uses: softprops/action-gh-release@v1
        with:
          files: build/package/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-mac:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install dependencies
        run: brew install qt
      - name: Build Project
        uses: threeal/cmake-action@v2.1.0
        with:
          source-dir: .
          build-dir: build
          options: |
            CMAKE_BUILD_TYPE=Release
          build-args: --config Release
      - name: Package with CPack
        run: |
          cd build
          cpack
      - name: Upload Release Artifacts
        uses: softprops/action-gh-release@v1
        with:
          files: build/package/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: "6.8"
          host: "windows"
          target: "desktop"
          arch: "win64_msvc2022_64"
          dir: "${{ github.workspace }}/example/"
          install-deps: "true"
          cache: "true"
          cache-key-prefix: "install-qt-action"
          setup-python: "true"
          set-env: "true"
          tools-only: "false"
          tools: "tools_cmake tools_ifw tools_qtcreator,qt.tools.qtcreator"
      - name: Build Project
        uses: threeal/cmake-action@v2.1.0
        with:
          source-dir: .
          build-dir: build
          options: |
            CMAKE_BUILD_TYPE=Release
          build-args: --config Release
      - name: Package with CPack
        run: |
          cd build
          cpack
      - name: List files in build/package
        run: dir build\package\
      - name: Upload Release Artifacts
        uses: softprops/action-gh-release@v1
        with:
          files: build/package/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-wasm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Qt for WebAssembly
        uses: jurplel/install-qt-action@v4
        with:
          version: "6.8"
          host: "linux"
          target: "desktop"
          arch: "wasm_singlethread"
          modules: "qtwebsockets qtpositioning qtsvg"
          setup-python: true
          cache: true
          cache-key-prefix: "qt-wasm"

      - name: Setup Emscripten
        run: |
          # Install emsdk
          git clone https://github.com/emscripten-core/emsdk.git
          cd emsdk
          ./emsdk install 3.1.56  # Version required for Qt 6.8
          ./emsdk activate 3.1.56
          echo "EMSDK=$PWD" >> $GITHUB_ENV
          echo "EMSCRIPTEN=$PWD/upstream/emscripten" >> $GITHUB_ENV
          echo "$PWD:$PWD/upstream/emscripten:$PWD/node/14.18.2_64bit/bin" >> $GITHUB_PATH
          cd ..

      - name: Verify Emscripten
        run: |
          source emsdk/emsdk_env.sh
          em++ --version

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential ninja-build

      - name: Configure CMake for WebAssembly
        run: |
          source emsdk/emsdk_env.sh
          mkdir -p wasm-build
          cd wasm-build
          cmake .. -DCMAKE_PREFIX_PATH=$Qt6_DIR \
                  -DCMAKE_TOOLCHAIN_FILE=$EMSCRIPTEN/cmake/Modules/Platform/Emscripten.cmake \
                  -DCMAKE_BUILD_TYPE=Release \
                  -G Ninja

      - name: Build WebAssembly
        run: |
          source emsdk/emsdk_env.sh
          cd wasm-build
          ninja

      - name: Prepare WebAssembly Deployment
        run: |
          mkdir -p wasm-deploy
          cp wasm-build/*.js wasm-deploy/
          cp wasm-build/*.wasm wasm-deploy/
          cp wasm-build/*.html wasm-deploy/
          cp wasm-build/*.worker.js wasm-deploy/ || true
          cp -r assets/* wasm-deploy/ || true
          echo "AddType application/wasm .wasm" > wasm-deploy/.htaccess
          echo "AddType application/javascript .js" >> wasm-deploy/.htaccess

      - name: Create WebAssembly Package
        run: |
          mkdir -p build/package
          zip -r build/package/wasm-package.zip wasm-deploy/

      - name: Upload WebAssembly Package
        uses: softprops/action-gh-release@v1
        with:
          files: build/package/wasm-package.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: wasm-deploy
          branch: gh-pages
          clean: true
